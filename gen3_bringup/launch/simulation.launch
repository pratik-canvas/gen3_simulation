<?xml version="1.0"?>
<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">

    <!-- more default parameters can be changed here -->
  </include>

  <arg name="robot_namespace" default="/"/>

  <!-- Load robot description -->
  <include file="$(find gen3_description)/launch/description.launch" >
  </include>

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find gen3_control)/config/control.yaml" />

  <arg name="teleop_config" default="$(find gen3_teleop)/config/gen3_teleop.yaml" />

  <rosparam file="$(arg teleop_config)" command="load" />

  <!-- Spawn controllers -->


  <!-- load and start the controllers -->
  <node name="left_controller_starter" pkg="controller_manager" type="controller_manager" args="spawn left_joint_state_controller left_sprocket_velocity_controller" output="screen" />
  <node name="right_controller_starter" pkg="controller_manager" type="controller_manager" args="spawn right_joint_state_controller right_sprocket_velocity_controller" output="screen" />


  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
    <!-- <param name="tf_prefix" value="" />
  </node> -->
  <node name="joy_node" pkg="joy" type="joy_node" output="screen" />


  <node pkg="gen3_teleop" type="joy_teleop.py" name="gen3_teleop"/>

  <node pkg="gen3_odometry" type="states.py" name="actual_state_publisher"/>
  <node pkg="gen3_odometry" type="slip_estimator.py" name="slip_esimator"/>
  <node pkg="gen3_odometry" type="odom.py" name="odometry"/>
  <node pkg="gen3_odometry" type="odom_visualizer.py" name="visualizer"/>


</launch>
